# Docker Compose configuration for pdfkb-mcp MCP Server
# Production-ready deployment with volume mounts and environment configuration

version: '3.8'

services:
  pdfkb-mcp:
    # Use pre-built image or build from source
    image: pdfkb-mcp:latest
    # Uncomment to build from source:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     PDFKB_VERSION: ${PDFKB_VERSION:-latest}

    container_name: pdfkb-mcp
    restart: unless-stopped

    # Port mapping for MCP server
    ports:
      - "${PDFKB_SERVER_PORT:-8000}:8000"   # MCP HTTP/SSE transport
      - "${PDFKB_WEB_PORT:-8080}:8080"      # Web interface (if enabled)

    # Volume mounts for data persistence
    volumes:
      # Documents directory - mount your PDF/Markdown collection here
      - "${PDFKB_DOCUMENTS_PATH:-./documents}:/app/documents:rw"

      # Cache directory - persistent storage for ChromaDB and processing cache
      - "pdfkb-cache:/app/cache"

      # Logs directory - container logs (optional)
      - "pdfkb-logs:/app/logs"

      # Configuration directory - custom config files (optional)
      # - "${PDFKB_CONFIG_PATH:-./config}:/app/config:ro"

    # Environment configuration
    environment:
      # === Core Configuration ===
      PDFKB_KNOWLEDGEBASE_PATH: "/app/documents"
      PDFKB_CACHE_DIR: "/app/cache"
      PDFKB_LOG_LEVEL: "${PDFKB_LOG_LEVEL:-INFO}"

      # === Transport Configuration ===
      PDFKB_TRANSPORT: "${PDFKB_TRANSPORT:-http}"
      PDFKB_SERVER_HOST: "0.0.0.0"
      PDFKB_SERVER_PORT: "8000"

      # === Embedding Configuration ===
      # Default: local embeddings (no API key required)
      PDFKB_EMBEDDING_PROVIDER: "${PDFKB_EMBEDDING_PROVIDER:-local}"
      PDFKB_LOCAL_EMBEDDING_MODEL: "${PDFKB_LOCAL_EMBEDDING_MODEL:-Qwen/Qwen3-Embedding-0.6B}"

      # OpenAI embeddings (uncomment and set if using OpenAI)
      # PDFKB_OPENAI_API_KEY: "${PDFKB_OPENAI_API_KEY}"
      # PDFKB_EMBEDDING_MODEL: "${PDFKB_EMBEDDING_MODEL:-text-embedding-3-large}"

      # HuggingFace embeddings (uncomment and set if using HuggingFace)
      # HF_TOKEN: "${HF_TOKEN}"
      # PDFKB_HUGGINGFACE_EMBEDDING_MODEL: "${PDFKB_HUGGINGFACE_EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}"

      # === Web Interface Configuration ===
      PDFKB_WEB_ENABLE: "${PDFKB_WEB_ENABLE:-false}"
      PDFKB_WEB_HOST: "0.0.0.0"
      PDFKB_WEB_PORT: "8080"

      # === Processing Configuration ===
      PDFKB_PDF_PARSER: "${PDFKB_PDF_PARSER:-pymupdf4llm}"
      PDFKB_DOCUMENT_CHUNKER: "${PDFKB_DOCUMENT_CHUNKER:-langchain}"
      PDFKB_CHUNK_SIZE: "${PDFKB_CHUNK_SIZE:-1000}"
      PDFKB_CHUNK_OVERLAP: "${PDFKB_CHUNK_OVERLAP:-200}"

      # === Search Configuration ===
      PDFKB_ENABLE_HYBRID_SEARCH: "${PDFKB_ENABLE_HYBRID_SEARCH:-true}"
      PDFKB_ENABLE_RERANKER: "${PDFKB_ENABLE_RERANKER:-false}"
      PDFKB_ENABLE_SUMMARIZER: "${PDFKB_ENABLE_SUMMARIZER:-false}"

      # === Performance Configuration ===
      PDFKB_MAX_PARALLEL_PARSING: "${PDFKB_MAX_PARALLEL_PARSING:-1}"
      PDFKB_MAX_PARALLEL_EMBEDDING: "${PDFKB_MAX_PARALLEL_EMBEDDING:-1}"
      PDFKB_BACKGROUND_QUEUE_WORKERS: "${PDFKB_BACKGROUND_QUEUE_WORKERS:-2}"

    # Health check for container orchestration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      start_period: 60s
      retries: 3

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

    # Security settings
    security_opt:
      - no-new-privileges:true

    # Use non-root user (defined in Dockerfile)
    user: "1001:1001"

    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

    # Network settings (optional - creates isolated network)
    networks:
      - pdfkb-network

# Named volumes for data persistence
volumes:
  pdfkb-cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PDFKB_CACHE_PATH:-./cache}"

  pdfkb-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PDFKB_LOGS_PATH:-./logs}"

# Optional: Isolated network
networks:
  pdfkb-network:
    driver: bridge
    name: pdfkb-network
